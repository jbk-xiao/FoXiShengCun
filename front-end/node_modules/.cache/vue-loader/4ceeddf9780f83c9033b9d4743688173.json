{"remainingRequest":"E:\\faxianbei\\faxianbei7.5\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\faxianbei\\faxianbei7.5\\src\\components\\TreeMap.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\faxianbei\\faxianbei7.5\\src\\components\\TreeMap.vue","mtime":1615203606538},{"path":"E:\\faxianbei\\faxianbei7.5\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\faxianbei\\faxianbei7.5\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\faxianbei\\faxianbei7.5\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\faxianbei\\faxianbei7.5\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\faxianbei\\faxianbei7.5\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKICAuY2hhcnR0IHsKICAgICAgd2lkdGg6IDcwJTsKICAgICAgaGVpZ2h0OiA2MDBweDsKICAgICAgbWFyZ2luOiA1MHB4IGF1dG87CiAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYigyNDYsIDI0NSwgMjQyKTsKICAgICAgYm94LXNoYWRvdzogOHB4IDhweCA4cHggcmdiYSgwLCAwLCAwLCAuMikKICB9CiAgLmJsb2NrLXRpdGxlewogIHdpZHRoOiAxMDA7CiAgbWFyZ2luOiAwIGF1dG87CiAgdGV4dC1hbGlnbjpjZW50ZXI7Cn0K"},{"version":3,"sources":["TreeMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TreeMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        \r\n            <div class=\"chartt\" id=\"maint\" ref=\"chart\"></div>\r\n    </div>\r\n</template>\r\n<script>\r\n//import $ from 'jquery'\r\nexport default {\r\n    name: 'eCharts',\r\n        props: ['info'],\r\n        data() {\r\n            return {\r\n                // list: []\r\n            }\r\n        },\r\n        mounted() {\r\n            setTimeout(() => {\r\n                //console.log(this.info)\r\n                this.draw(this.info)\r\n            }, 1000);\r\n        },\r\n        methods:{\r\n            draw(info){\r\n                var myChart = this.$echarts.init(document.getElementById('maint'))\r\n                \r\n                //var ROOT_PATH = 'https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\r\n//var app = {};\r\n\r\nvar option;\r\n\r\nmyChart.showLoading();\r\n\r\n//$.get(ROOT_PATH + '/data/asset/data/disk.tree.json', function (diskData) {\r\n    myChart.hideLoading();\r\n\r\n    /*function colorMappingChange(value) {\r\n        var levelOption = getLevelOption(value);\r\n        chart.setOption({\r\n            series: [{\r\n                levels: levelOption\r\n            }]\r\n        });\r\n    }*/\r\n\r\n    //var formatUtil = this.$echarts.format;\r\n\r\n    function getLevelOption() {\r\n        return [\r\n            /*{\r\n                itemStyle: {\r\n                    borderColor: '#f7c35f',\r\n                    borderWidth: 1,\r\n                    gapWidth: 0\r\n                },\r\n                upperLabel: {\r\n                    show: false\r\n                }\r\n            },*/\r\n            {\r\n                itemStyle: {\r\n                    borderColor: '#f7c35f',\r\n                    borderWidth: 6,\r\n                    gapWidth: 6\r\n                },\r\n                emphasis: {\r\n                    itemStyle: {\r\n                        borderColor: '#f7c35f'\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                colorSaturation: [0.35, 0.5],\r\n                itemStyle: {\r\n                    borderWidth: 6,\r\n                    gapWidth: 6,\r\n                    borderColorSaturation: 0.6\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    myChart.setOption(option = {\r\n\r\n        title: {\r\n            subtext: '评价维度按色块划分'+'\\n'+'点击方块放大查看详情',\r\n            left: 'center',\r\n            top:0\r\n        },\r\n\r\n        tooltip: {\r\n            formatter: function (info) {\r\n                //var value = info.value;\r\n                var name = info.name;\r\n                var val = info.value[1];\r\n                return '<div class=\"tooltip-title\">' + '关键词：'+name +'<br>'+'情感极性：'+val+ '</div>';\r\n            }\r\n        },\r\n        //visualDimension: 2,\r\n        visualMap: {\r\n        //show: false,\r\n        min: 0,\r\n            max: 1,\r\n            dimension: 1,\r\n            text: ['正面', '负面'],\r\n            realtime: false,\r\n            calculable: true,\r\n            inRange: {\r\n                color: ['green', 'red']\r\n            },\r\n            \r\n            \r\n    },\r\n        series: [\r\n            {\r\n                name: '评价维度',\r\n                type: 'treemap',\r\n                visibleMin: 2000,\r\n                label: {\r\n                    show: true,\r\n                    formatter: '{b}'\r\n                },\r\n                upperLabel: {\r\n                    show: true,\r\n                    height: 28\r\n                },\r\n                itemStyle: {\r\n                    borderColor: '#f7c35f'\r\n                },\r\n                levels: getLevelOption(),\r\n                data: info\r\n            }\r\n        ]\r\n    });\r\n//});\r\n\r\noption && myChart.setOption(option);\r\nwindow.onresize = myChart.resize;\r\n            }\r\n        }\r\n}\r\n</script>\r\n\r\n<style>\r\n    .chartt {\r\n        width: 70%;\r\n        height: 600px;\r\n        margin: 50px auto;\r\n        border: 1px solid rgb(246, 245, 242);\r\n        box-shadow: 8px 8px 8px rgba(0, 0, 0, .2)\r\n    }\r\n    .block-title{\r\n    width: 100;\r\n    margin: 0 auto;\r\n    text-align:center;\r\n  }\r\n</style>"]}]}